diff --git a/node_modules/react-native/Libraries/Lists/FlatList.js b/node_modules/react-native/Libraries/Lists/FlatList.js
index 9b280f2..71485dc 100644
--- a/node_modules/react-native/Libraries/Lists/FlatList.js
+++ b/node_modules/react-native/Libraries/Lists/FlatList.js
@@ -548,11 +548,7 @@ class FlatList<ItemT> extends React.PureComponent<Props<ItemT>, void> {
           'array with 1-%s columns; instead, received a single item.',
         numColumns,
       );
-      return items
-        .map((item, kk) =>
-          keyExtractor(((item: $FlowFixMe): ItemT), index * numColumns + kk),
-        )
-        .join(':');
+      return `row-index-${index}`;
     }
 
     // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array
@@ -625,7 +621,8 @@ class FlatList<ItemT> extends React.PureComponent<Props<ItemT>, void> {
 
     const renderProp = (info: RenderItemProps<ItemT>) => {
       if (cols > 1) {
-        const {item, index} = info;
+        const { item, index } = info;
+        const keyExtractor = this.props.keyExtractor ?? defaultKeyExtractor;
         invariant(
           Array.isArray(item),
           'Expected array of items with numColumns > 1',
@@ -633,6 +630,7 @@ class FlatList<ItemT> extends React.PureComponent<Props<ItemT>, void> {
         return (
           <View style={StyleSheet.compose(styles.row, columnWrapperStyle)}>
             {item.map((it, kk) => {
+              const key = keyExtractor(it, index * cols + kk);
               const element = render({
                 // $FlowFixMe[incompatible-call]
                 item: it,
@@ -640,7 +638,7 @@ class FlatList<ItemT> extends React.PureComponent<Props<ItemT>, void> {
                 separators: info.separators,
               });
               return element != null ? (
-                <React.Fragment key={kk}>{element}</React.Fragment>
+                <React.Fragment key={key}>{element}</React.Fragment>
               ) : null;
             })}
           </View>
